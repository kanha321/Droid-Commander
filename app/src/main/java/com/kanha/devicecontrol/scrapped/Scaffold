
                    Scaffold(
                        floatingActionButtonPosition = FabPosition.End,
                        floatingActionButton = {
                            FloatingActionButton(
                                onClick = {
                                    if (isDeviceConnected) wirelessConnection(serialNumbers[0])
                                    else MyToast.show(this@MainActivity, "No device connected")
                                }
                            ) {
                                Icon(
                                    // use icon from drawable as imageVector
                                    painter = painterResource(id = R.drawable.ic_launcher_foreground),
                                    contentDescription = null,
                                    tint = MaterialTheme.colorScheme.onPrimaryContainer,
                                    modifier = Modifier.size(60.dp)
                                )
                            }
                        },
                        topBar = {
                            TopAppBar(
                                    title = {
                                        Text(text = getString(R.string.app_name))
                                    },
                                    colors = TopAppBarDefaults.smallTopAppBarColors(
                                        containerColor = MaterialTheme.colorScheme.primaryContainer,
                                        titleContentColor = MaterialTheme.colorScheme.onPrimaryContainer,
                                    ),
                                    actions =
                                    {
                                        IconButton(onClick = {
                                            // check if device is rooted
                                            try {
                                                MyToast.show(this@MainActivity, checkRootOnHost())
                                            } catch (e: Exception) {
                                                MyToast.show(
                                                    this@MainActivity,
                                                    "Device probably not Rooted"
                                                )
                                            }
                                        }) {
                                            Icon(
                                                painter = painterResource(id = R.drawable.round_tag_24),
                                                contentDescription = "check Root",
                                                tint = MaterialTheme.colorScheme.onPrimaryContainer,
                                            )
                                        }
                                        IconButton(onClick = {
                                            refresh()
                                        }) {
                                            Icon(
                                                painter = painterResource(id = R.drawable.baseline_refresh_24),
                                                contentDescription = "Refresh",
                                                tint = MaterialTheme.colorScheme.onPrimaryContainer,
                                            )
                                        }
                                        IconButton(onClick = {
                                            isDeveloperModeEnabled = !isDeveloperModeEnabled
                                            refresh()
                                        }) {
                                            Icon(
                                                painter = painterResource(id = R.drawable.outline_terminal_24),
                                                contentDescription = "Terminal",
                                                tint = MaterialTheme.colorScheme.onPrimaryContainer,
                                            )
                                        }
                                    }
                                )
                        }
                    ) { values ->
                        LazyColumn(
                            contentPadding = values,
                        ) {
                            items(0) {}
                        }
//                        ConnectedDevices(deviceList = serialNumbers, Modifier.fillMaxWidth())

                    }